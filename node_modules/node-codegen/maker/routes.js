const pluralize = require('pluralize');
const { queryHandler } = require('../mysql/db');


const makeRouteName = (tableName) => {
    return tableName.toLowerCase();
}

module.exports.makeRoute = (tableName) => {
    return queryHandler(`DESC ${tableName}`).then((result) => {
        const fileColumns = [];
        let hasUsersTable = false;
        result.forEach((col, pos) => {
            if ((/picture$/.test(col.Field)) || (/Picture$/.test(col.Field))|| (/video$/.test(col.Field)) || (/Video$/.test(col.Field))
                || (/audio$/.test(col.Field))|| (/Audio$/.test(col.Field))  || (col.Field.toLowerCase() === "mediaurl") 
                || (/file$/.test(col.Field)) || (/File$/.test(col.Field))) {
                fileColumns.push(col.Field);
            }
        });
        
        //if (tableName.toLowerCase() === "users") hasUsersTable = true;
        const routeName = makeRouteName(tableName);  
        let includeImage = "";

        let routeString = "";
        routeString += `const ${routeName} = require('../controllers/${routeName}');\n`;
        routeString += `const express = require('express');\n`;
        routeString += `const router = express.Router();\n`;
        routeString += `const auth = require('../middlewares/usersAuth');\n`;
        
        if (fileColumns.length > 0) {
            routeString += `const multer = require('../middlewares/${tableName.toLowerCase()}');\n`;
            includeImage = " multer,";
        }

        if (tableName.toLowerCase() === "users") {
            routeString += `\nrouter.post('/${routeName}', ${routeName}.create);\n`;
            routeString += `router.post('/${routeName}/login', ${routeName}.getUser);\n`;
            routeString += `router.post('/${routeName}/facebook/login', ${routeName}.facebooklogin);\n`;
            routeString += `router.post('/${routeName}/google/login', ${routeName}.googlelogin);\n`;
            routeString += `router.post('/${routeName}/check', auth, ${routeName}.checkDsUser);\n`;
            routeString += `router.post('/${routeName}/reset', ${routeName}.pwdreset);\n`;
            routeString += `router.get('/${routeName}/:id', auth, ${routeName}.show);\n`;
            routeString += `router.put('/${routeName}/:id', auth,${includeImage} ${routeName}.update);\n`;
            routeString += `router.delete('/${routeName}/:id', auth, ${routeName}.remove);\n\n`;
        } else {
            routeString += `\nrouter.post('/${routeName}', auth,${includeImage} ${routeName}.create);\n`;
            routeString += `router.get('/${routeName}', auth, ${routeName}.index);\n`;
            routeString += `router.get('/${routeName}/:id', auth, ${routeName}.show);\n`;
            routeString += `router.put('/${routeName}/:id', auth,${includeImage} ${routeName}.update);\n`;
            routeString += `router.delete('/${routeName}/:id', auth, ${routeName}.remove);\n\n`;
        }

        routeString += `module.exports = router;\n`;
        return routeString;

    }).catch((error) => {
        throw error;
    });
};