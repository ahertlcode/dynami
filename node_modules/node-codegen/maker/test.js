"use strict";

const { queryHandler } = require('../mysql/db');

const routepath = (tableName) => {
    return tableName.toLowerCase();
}

module.exports.makeTest = (tableName) => {
    return queryHandler(`DESC ${tableName}`)
    .then((result) => {
        const columns = [];
        result.forEach((col) => {
            if (col.Field === `id` || col.Field === "createdAt" || col.Field === "updatedAt" || col.Field === "deletedAt") return;
            columns.push(col.Field);
        });

        let teststring = "";
        teststring += `const supertest = require('supertest');\n`;
        teststring += `const faker = require('faker');\n`;
        teststring += `const chai = require('chai');\n`;
        teststring += `const should = chai.should();\n\n`;
        teststring += `const server = supertest.agent("http://localhost:3000");\n\n`;
        teststring += `chai.use(require('chai-json));\n`;

        teststring += `describe("Nodejs unit testing", () => {\n`;

        if (routepath(tableName) === "users"){
            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/users")\n`;
            teststring += `        .send({`;
            columns.forEach((cols) => {
                teststring += `"${cols}":"",`;
            });
            teststring += `})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/users/login")\n`;
            teststring += `        .send({"email":faker.internet.email(),"password":faker.internet.password})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/users/facebook/login")\n`;
            teststring += `        .send({"access_token":"put facebook access token here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/users/google/login")\n`;
            teststring += `        .send({"access_token":"put google access token here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/users/reset")\n`;
            teststring += `        .send({"token":"put jsonwebtoken here.","current_pwd":"", "new_password":"", "confirm_new_pwd":""})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .get("/users")\n`;
            teststring += `        .send({"token":"put jsonwebtoken here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .get("/users/:id")\n`;
            teststring += `        .send({"token":"put jsonwebtoken here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .put("/users/:id")\n`;
            teststring += `        .send({`;
            columns.forEach((cols) => {
                teststring += `"${cols}":"",`;
            });
            teststring += `})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/users/:id")\n`;
            teststring += `        .send({"_method":"delete","token":"put jsonwebtoken here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n`;
        }else{
            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/${routepath(tableName)}")\n`;
            teststring += `        .send({"token":"put jsonwebtoken here.",`;
            columns.forEach((cols) => {
                teststring += `"${cols}":"",`;
            });
            teststring += `})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .get("/${routepath(tableName)}")\n`;
            teststring += `        .send({"token":"put jsonwebtoken here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .get("/${routepath(tableName)}/:id")\n`;
            teststring += `        .send({"token":"put jsonwebtoken here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .put("/${routepath(tableName)}/:id")\n`;
            teststring += `        .send({"token":"put jsonwebtoken here.",`;
            columns.forEach((cols) => {
                teststring += `"${cols}":"",`;
            });
            teststring += `})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n\n\n`;

            teststring += `    it("should return status 200 Ok", (done) => {\n`;
            teststring += `    server\n`;
            teststring += `        .post("/${routepath(tableName)}/:id")\n`;
            teststring += `        .send({"_method":"delete","token":"put jsonwebtoken here."})\n`;
            teststring += `        .expect("content-type", /json/)\n`;
            teststring += `        .expect(200)\n`;
            teststring += `        .end((err, res) => {\n`;
            teststring += `            res.status.should.be.equal(200);\n`;
            teststring += `            res.should.be.jsonObj;\n`;
            teststring += `            res.body.error.should.equal(false);\n`;
            teststring += `            res.body.should.be.a('object');\n`;
            teststring += `            res.body.data.should.be.a('array');\n`;
            teststring += `            done();\n`;
            teststring += `        });\n`;
            teststring += `    });\n`;
        }
        teststring += `});`;
        return teststring;
    }).catch((error) => {
        throw error;
    })
}