const jwt = require('jsonwebtoken');
const fs = require('fs');


module.exports.notEmptyObject = (obj) => {
    return Object.keys(obj).length !== 0 && obj.constructor === Object;
}


module.exports.logError = (errObj) => {
    console.log(errObj);
}


module.exports.notEmptyArray = (array) => {
    return (Array.isArray(array) && (array.length > 0));
}


module.exports.padStr = (input, width, charc='') => {
    return String(input).padStart(width, charc || '0');
};


module.exports.resolveCurrUserInfo = (requestBody) => {
    let currUserId = '';
    if (requestBody.currUserId) {
        currUserId = requestBody.currUserId;
        delete requestBody.currUserId;
    }

    let currUserEmail = '';
    if (requestBody.currUserEmail) {
        currUserEmail = requestBody.currUserEmail;
        delete requestBody.currUserEmail;
    }

    let currUserRole = '';
    if (requestBody.currUserRole) {
        currUserRole = requestBody.currUserRole;
        delete requestBody.currUserRole;
    }
    return {currUserId, currUserEmail, currUserRole, requestBody};
}


module.exports.notEmpty = (inObj, dsConstructor) => {
    return (Object.keys(inObj).length > 0) && (inObj.constructor === dsConstructor);
}


module.exports.reAuth = (authorization) => {
    const token = authorization.split(' ')[1];
    if (token) {
        const decodedToken = jwt.verify(token, 'RANDOM_TOKEN_SECRET');
        const { userId } = decodedToken;
        const payLoadParam = userId.split("!~+=");
    
        currUserId = payLoadParam[0] || "";
        currUserEmail = payLoadParam[1] || "";
        currUserRole = payLoadParam[2] || 0;
        return {currUserId, currUserEmail, currUserRole};
    } else {
        return {};
    }
}

module.exports.removeFile = (file2remove) => {
    return fs.unlink(file2remove, function(error) {
        if (error && error.code == 'ENOENT') {
            return 9;
        } else if(error) {
            return 0;
        }
        return 1;
    });
}